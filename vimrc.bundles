if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
Plug 'christoomey/vim-run-interactive'

" If fzf has already been installed via Homebrew, use the existing fzf
" Otherwise, install fzf. The `--all` flag makes fzf accessible outside of vim
if isdirectory("/usr/local/opt/fzf")
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif

Plug 'junegunn/fzf.vim'
Plug 'elixir-lang/vim-elixir'
Plug 'fatih/vim-go'
Plug 'janko-m/vim-test'
Plug 'pangloss/vim-javascript'
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'

if g:has_async
  Plug 'dense-analysis/ale'
endif

" Vim sneak for faster locomotion
Plug 'justinmk/vim-sneak'

" Themes
Plug 'rakr/vim-one'
Plug 'ayu-theme/ayu-vim'
Plug 'bruth/vim-newsprint-theme'
Plug 'owickstrom/vim-colors-paramount'
Plug 'axvr/photon.vim'
Plug 'fenetikm/falcon'
Plug 'romainl/Apprentice'
Plug 'srcery-colors/srcery-vim'
Plug 'embark-theme/vim', { 'as': 'embark' }

" Use the golden ratio for auto sizing windows when jumping between them
Plug 'roman/golden-ratio'

" Distraction free writing
Plug 'junegunn/goyo.vim'
Plug 'amix/vim-zenroom2'
Plug 'reedes/vim-colors-pencil'

" Git gutter
Plug 'airblade/vim-gitgutter'

" Markdown
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'

" Material Theme
Plug 'kaicataldo/material.vim'

" TOML
Plug 'cespare/vim-toml'

" Typescript and JSX
Plug 'leafgarland/typescript-vim'
Plug 'peitalin/vim-jsx-typescript'

" Liquid
Plug 'tpope/vim-liquid'

" Auto insert matching "bracket" characters
Plug 'jiangmiao/auto-pairs'

" Split single line args into multiline
Plug 'AndrewRadev/splitjoin.vim'

" Emmet style tag generation in vim
Plug 'mattn/emmet-vim'

" Documentation generation
Plug 'kkoomen/vim-doge', { 'do': { -> doge#install() } }

" COC
Plug 'neoclide/coc.nvim', {'branch': 'release'}

let g:coc_global_extensions = [
      \ 'coc-tsserver',
      \ 'coc-json',
      \ 'coc-solargraph'
      \ ]

if isdirectory('./node_modules') && isdirectory('./node_modules/prettier')
  let g:coc_global_extensions += ['coc-prettier']
endif

if isdirectory('./node_modules') && isdirectory('./node_modules/eslint')
  let g:coc_global_extensions += ['coc-eslint']
endif

call plug#end()
